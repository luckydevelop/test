// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Kliiko.Ui.Tests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("LogIn and LogOut functionality")]
    public partial class LogInAndLogOutFunctionalityFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Login.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "LogIn and LogOut functionality", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("User logins with VALID credentials")]
        public virtual void UserLoginsWithVALIDCredentials()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User logins with VALID credentials", ((string[])(null)));
#line 3
  this.ScenarioSetup(scenarioInfo);
#line 4
   testRunner.Given("User starts new browser session and opens home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 5
   testRunner.When("User enters user@insider.com and qwerty123", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 6
   testRunner.Then("Page \'AccountProfilePage\' is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 7
     testRunner.And("User selects \'LogOut\' in My Details menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
     testRunner.And("Page \'HomePage\' is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ADMIN user logins with VALID credentials")]
        public virtual void ADMINUserLoginsWithVALIDCredentials()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ADMIN user logins with VALID credentials", ((string[])(null)));
#line 10
  this.ScenarioSetup(scenarioInfo);
#line 11
   testRunner.Given("User starts new browser session and opens home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
   testRunner.When("User enters admin@insider.com and qwerty123", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
   testRunner.Then("Page \'AccountProfilePageAdmin\' is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 14
     testRunner.And("User selects \'LogOut\' in My Details menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
     testRunner.And("Page \'HomePage\' is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("User logins with MISSING credentials")]
        [NUnit.Framework.TestCaseAttribute("user@insider.com", "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("", "12345678", new string[0])]
        [NUnit.Framework.TestCaseAttribute("", "", new string[0])]
        public virtual void UserLoginsWithMISSINGCredentials(string login, string password, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User logins with MISSING credentials", exampleTags);
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
    testRunner.Given("User starts new browser session and opens home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
    testRunner.When(string.Format("User enters {0} and {1}", login, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
 testRunner.Then("Validation message is appeared on \'HomePage\' \'Missing credentials\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
